import{_ as a,c as e,o as t,ae as i}from"./chunks/framework.BuyCb9nx.js";const c=JSON.parse('{"title":"String Utils","description":"","frontmatter":{},"headers":[],"relativePath":"api/string.md","filePath":"api/string.md"}'),n={name:"api/string.md"};function l(r,s,p,o,d,h){return t(),e("div",null,s[0]||(s[0]=[i(`<h1 id="string-utils" tabindex="-1">String Utils <a class="header-anchor" href="#string-utils" aria-label="Permalink to &quot;String Utils&quot;">​</a></h1><p>Functions for string manipulation and formatting.</p><h2 id="makeindent" tabindex="-1">makeIndent <a class="header-anchor" href="#makeindent" aria-label="Permalink to &quot;makeIndent&quot;">​</a></h2><p><strong>File:</strong> <code>lib/makeIndent.js</code></p><p>Returns the given number of tabs</p><p><strong>Parameters:</strong></p><ul><li><code>indent</code> (number) - The number of tabs to create</li></ul><p><strong>Returns:</strong></p><ul><li>string - A string with the specified number of tabs</li></ul><p><strong>Example:</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { makeIndent } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@mhkeller/utils&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Usage example for makeIndent</span></span></code></pre></div><h2 id="padby" tabindex="-1">padBy <a class="header-anchor" href="#padby" aria-label="Permalink to &quot;padBy&quot;">​</a></h2><p><strong>File:</strong> <code>lib/padBy.js</code></p><p>Pad a string or number with leading zeros</p><p><strong>Parameters:</strong></p><ul><li><code>value</code> (string or number) - The value to pad</li><li><code>pb</code> (number) - How many characters the resulting string should have</li></ul><p><strong>Returns:</strong></p><ul><li>string - The padded string</li></ul><p><strong>Example:</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { padBy } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@mhkeller/utils&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Usage example for padBy</span></span></code></pre></div><h2 id="totitlecase" tabindex="-1">toTitleCase <a class="header-anchor" href="#totitlecase" aria-label="Permalink to &quot;toTitleCase&quot;">​</a></h2><p><strong>File:</strong> <code>lib/toTitleCase.js</code></p><p>Converts a string to title case</p><p><strong>Parameters:</strong></p><ul><li><code>str</code> (string) - The string to convert</li></ul><p><strong>Returns:</strong></p><ul><li>string - The converted string</li></ul><p><strong>Example:</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { toTitleCase } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@mhkeller/utils&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Usage example for toTitleCase</span></span></code></pre></div>`,29)]))}const k=a(n,[["render",l]]);export{c as __pageData,k as default};
