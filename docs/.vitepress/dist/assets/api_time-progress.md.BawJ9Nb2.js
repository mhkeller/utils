import{_ as s,c as i,o as t,ae as o}from"./chunks/framework.BuyCb9nx.js";const g=JSON.parse('{"title":"Time & Progress","description":"","frontmatter":{},"headers":[],"relativePath":"api/time-progress.md","filePath":"api/time-progress.md"}'),a={name:"api/time-progress.md"};function n(l,e,p,r,h,d){return t(),i("div",null,e[0]||(e[0]=[o(`<h1 id="time-progress" tabindex="-1">Time &amp; Progress <a class="header-anchor" href="#time-progress" aria-label="Permalink to &quot;Time &amp; Progress&quot;">​</a></h1><p>Functions for time handling, delays, and progress tracking.</p><h2 id="getnow" tabindex="-1">getNow <a class="header-anchor" href="#getnow" aria-label="Permalink to &quot;getNow&quot;">​</a></h2><p><strong>File:</strong> <code>lib/getNow.js</code></p><p>Returns the current date and time as a string.</p><p><strong>Returns:</strong></p><ul><li>string - The current date and time as a string</li></ul><p><strong>Example:</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { getNow } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@mhkeller/utils&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Usage example for getNow</span></span></code></pre></div><h2 id="initlogprogress" tabindex="-1">initLogProgress <a class="header-anchor" href="#initlogprogress" aria-label="Permalink to &quot;initLogProgress&quot;">​</a></h2><p><strong>File:</strong> <code>lib/initLogProgress.js</code></p><p>Logs progress in loop to the console every n-times. Also logs the last iteration. It also displays how much time is left in the process by calculating the average time per iteration.</p><p><strong>Parameters:</strong></p><ul><li><code>total</code> (number) - The total number of iterations in the loop.</li><li><code>options</code> (object, optional) - Options object</li><li><code>options.every=1</code> (number, optional) - How many times to log the progress.</li></ul><p><strong>Returns:</strong></p><ul><li>Function - A function that logs the progress in the loop.</li></ul><p><strong>Example:</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { initLogProgress } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@mhkeller/utils&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Usage example for initLogProgress</span></span></code></pre></div><h2 id="sleep" tabindex="-1">sleep <a class="header-anchor" href="#sleep" aria-label="Permalink to &quot;sleep&quot;">​</a></h2><p><strong>File:</strong> <code>lib/sleep.js</code></p><p>Sleep for a given amount of milliseconds</p><p><strong>Parameters:</strong></p><ul><li><code>ms</code> (number) - Milliseconds to sleep</li><li><code>options</code> (Object, optional) - Options object</li><li><code>options.log=true</code> (boolean, optional) - Whether to log to console</li><li><code>options.indent=0</code> (number, optional) - How many tabs to indent the notification by</li><li><code>options.jitter=0</code> (number, optional) - A random percentage of this value in milliseconds to add to the sleep time</li></ul><p><strong>Returns:</strong></p><ul><li>Promise(void) - A promise that resolves after the sleep time</li></ul><p><strong>Example:</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { sleep } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@mhkeller/utils&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Usage example for sleep</span></span></code></pre></div><h2 id="sleepevery" tabindex="-1">sleepEvery <a class="header-anchor" href="#sleepevery" aria-label="Permalink to &quot;sleepEvery&quot;">​</a></h2><p><strong>File:</strong> <code>lib/sleepEvery.js</code></p><p>Sleep for a given amount of milliseconds every n-times</p><p><strong>Parameters:</strong></p><ul><li><code>n</code> (number) - Every n-times (must be &gt; 0)</li><li><code>ms</code> (number) - Milliseconds to sleep</li><li><code>i</code> (number) - Current iteration (0-based)</li><li><code>options</code> (object, optional) - Options object</li><li><code>options.log=true</code> (boolean, optional) - Whether to log to console</li><li><code>options.indent</code> (number, optional) - How many tabs to indent the notification by</li><li><code>options.jitter=0</code> (number, optional) - A random percentage of this value in milliseconds to the sleep time</li></ul><p><strong>Returns:</strong></p><ul><li>Promise(void) - Promise that resolves when complete</li></ul><p><strong>Example:</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { sleepEvery } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@mhkeller/utils&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Usage example for sleepEvery</span></span></code></pre></div>`,36)]))}const m=s(a,[["render",n]]);export{g as __pageData,m as default};
