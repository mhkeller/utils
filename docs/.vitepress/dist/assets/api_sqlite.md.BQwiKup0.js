import{_ as t,c as a,o as s,ae as i}from"./chunks/framework.BuyCb9nx.js";const k=JSON.parse('{"title":"SQLite Functions","description":"","frontmatter":{},"headers":[],"relativePath":"api/sqlite.md","filePath":"api/sqlite.md"}'),n={name:"api/sqlite.md"};function l(r,e,o,p,c,d){return s(),a("div",null,e[0]||(e[0]=[i(`<h1 id="sqlite-functions" tabindex="-1">SQLite Functions <a class="header-anchor" href="#sqlite-functions" aria-label="Permalink to &quot;SQLite Functions&quot;">​</a></h1><p>Utilities for working with SQLite databases.</p><h2 id="createsqlite" tabindex="-1">createSqlite <a class="header-anchor" href="#createsqlite" aria-label="Permalink to &quot;createSqlite&quot;">​</a></h2><p><strong>File:</strong> <code>lib/createSqlite.js</code></p><p>@typedef {Recordof string and &#39;null&#39; | &#39;integer&#39; | &#39;real&#39; | &#39;text&#39; | &#39;blob&#39;} Schema</p><p><strong>Example:</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { createSqlite } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@mhkeller/utils&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Usage example for createSqlite</span></span></code></pre></div>`,7)]))}const u=t(n,[["render",l]]);export{k as __pageData,u as default};
