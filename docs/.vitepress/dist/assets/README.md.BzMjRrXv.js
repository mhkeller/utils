import{_ as a,c as t,o as i,ae as s}from"./chunks/framework.BuyCb9nx.js";const u=JSON.parse('{"title":"Documentation Website","description":"","frontmatter":{},"headers":[],"relativePath":"README.md","filePath":"README.md"}'),n={name:"README.md"};function o(l,e,r,d,c,p){return i(),t("div",null,e[0]||(e[0]=[s(`<h1 id="documentation-website" tabindex="-1">Documentation Website <a class="header-anchor" href="#documentation-website" aria-label="Permalink to &quot;Documentation Website&quot;">​</a></h1><p>This directory contains the VitePress-powered documentation website for @mhkeller/utils.</p><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>The documentation is automatically generated from JSDoc comments in the source code and organized into logical categories:</p><ul><li><strong>Array &amp; Object Utils</strong> - Functions for working with arrays, objects, and data structures</li><li><strong>String Utils</strong> - Functions for string manipulation and formatting</li><li><strong>Number Utils</strong> - Functions for number formatting and mathematical operations</li><li><strong>Time &amp; Progress</strong> - Functions for time handling, delays, and progress tracking</li><li><strong>File &amp; Data</strong> - Functions for reading, writing, and processing data files</li><li><strong>General Utilities</strong> - Miscellaneous utility functions</li><li><strong>Database Functions</strong> - PostgreSQL utilities and helpers</li><li><strong>SQLite Functions</strong> - SQLite database utilities</li><li><strong>Web Scraping</strong> - Browser automation and screenshot tools</li></ul><h2 id="development" tabindex="-1">Development <a class="header-anchor" href="#development" aria-label="Permalink to &quot;Development&quot;">​</a></h2><h3 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h3><p>Make sure you have the required dependencies installed:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><h3 id="local-development" tabindex="-1">Local Development <a class="header-anchor" href="#local-development" aria-label="Permalink to &quot;Local Development&quot;">​</a></h3><p>Start the development server:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs:dev</span></span></code></pre></div><p>The documentation will be available at <code>http://localhost:5173/utils/</code> (note: this is a local development URL)</p><h3 id="building" tabindex="-1">Building <a class="header-anchor" href="#building" aria-label="Permalink to &quot;Building&quot;">​</a></h3><p>Generate the documentation and build the static site:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs:build</span></span></code></pre></div><p>The built site will be in <code>docs/.vitepress/dist/</code></p><h3 id="preview-built-site" tabindex="-1">Preview Built Site <a class="header-anchor" href="#preview-built-site" aria-label="Permalink to &quot;Preview Built Site&quot;">​</a></h3><p>Preview the built documentation:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs:preview</span></span></code></pre></div><h2 id="content-management" tabindex="-1">Content Management <a class="header-anchor" href="#content-management" aria-label="Permalink to &quot;Content Management&quot;">​</a></h2><h3 id="automatic-generation" tabindex="-1">Automatic Generation <a class="header-anchor" href="#automatic-generation" aria-label="Permalink to &quot;Automatic Generation&quot;">​</a></h3><p>The API documentation is partially generated from JSDoc comments using the <code>docs/generate-docs.js</code> script:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs:generate</span></span></code></pre></div><h3 id="manual-editing" tabindex="-1">Manual Editing <a class="header-anchor" href="#manual-editing" aria-label="Permalink to &quot;Manual Editing&quot;">​</a></h3><p>While the base content is generated from JSDoc, the API documentation pages can be manually edited to add:</p><ul><li>Better examples</li><li>Usage patterns</li><li>Additional context</li><li>Cross-references</li></ul><h3 id="adding-new-functions" tabindex="-1">Adding New Functions <a class="header-anchor" href="#adding-new-functions" aria-label="Permalink to &quot;Adding New Functions&quot;">​</a></h3><p>When adding new functions to the library:</p><ol><li>Add comprehensive JSDoc comments to the source file</li><li>Update the categories in <code>docs/generate-docs.js</code> if needed</li><li>Run <code>npm run docs:generate</code> to update the documentation</li><li>Edit the generated markdown files to add examples and context</li></ol><h2 id="file-structure" tabindex="-1">File Structure <a class="header-anchor" href="#file-structure" aria-label="Permalink to &quot;File Structure&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>docs/</span></span>
<span class="line"><span>├── .vitepress/</span></span>
<span class="line"><span>│   └── config.js          # VitePress configuration</span></span>
<span class="line"><span>├── api/                   # API reference pages</span></span>
<span class="line"><span>│   ├── index.md</span></span>
<span class="line"><span>│   ├── array-object.md</span></span>
<span class="line"><span>│   ├── string.md</span></span>
<span class="line"><span>│   ├── number.md</span></span>
<span class="line"><span>│   ├── time-progress.md</span></span>
<span class="line"><span>│   ├── file-data.md</span></span>
<span class="line"><span>│   ├── utilities.md</span></span>
<span class="line"><span>│   ├── database.md</span></span>
<span class="line"><span>│   ├── sqlite.md</span></span>
<span class="line"><span>│   └── scraping.md</span></span>
<span class="line"><span>├── index.md               # Home page</span></span>
<span class="line"><span>├── installation.md       # Installation guide</span></span>
<span class="line"><span>└── generate-docs.js       # Documentation generation script</span></span></code></pre></div><h2 id="deployment" tabindex="-1">Deployment <a class="header-anchor" href="#deployment" aria-label="Permalink to &quot;Deployment&quot;">​</a></h2><p>The documentation is automatically deployed to GitHub Pages when changes are pushed to the main branch via the <code>.github/workflows/docs.yml</code> workflow.</p><h2 id="customization" tabindex="-1">Customization <a class="header-anchor" href="#customization" aria-label="Permalink to &quot;Customization&quot;">​</a></h2><h3 id="theme" tabindex="-1">Theme <a class="header-anchor" href="#theme" aria-label="Permalink to &quot;Theme&quot;">​</a></h3><p>The documentation uses the default VitePress theme. To customize:</p><ol><li>Edit <code>docs/.vitepress/config.js</code> for configuration</li><li>Add custom CSS in <code>docs/.vitepress/theme/style.css</code></li><li>Override components in <code>docs/.vitepress/theme/index.js</code></li></ol><h3 id="navigation" tabindex="-1">Navigation <a class="header-anchor" href="#navigation" aria-label="Permalink to &quot;Navigation&quot;">​</a></h3><p>Update the sidebar navigation in <code>docs/.vitepress/config.js</code> in the <code>themeConfig.sidebar</code> section.</p><h3 id="styling" tabindex="-1">Styling <a class="header-anchor" href="#styling" aria-label="Permalink to &quot;Styling&quot;">​</a></h3><p>The documentation uses VitePress&#39;s default theme with minimal customization. The color scheme and layout are optimized for code documentation.</p><h2 id="best-practices" tabindex="-1">Best Practices <a class="header-anchor" href="#best-practices" aria-label="Permalink to &quot;Best Practices&quot;">​</a></h2><ol><li><strong>Keep JSDoc comments up to date</strong> - The documentation quality depends on good JSDoc comments</li><li><strong>Add practical examples</strong> - Include real-world usage examples for each function</li><li><strong>Cross-reference related functions</strong> - Link to related utilities when relevant</li><li><strong>Test examples</strong> - Ensure all code examples actually work</li><li><strong>Use consistent formatting</strong> - Follow the established patterns for parameter documentation</li></ol>`,44)]))}const m=a(n,[["render",o]]);export{u as __pageData,m as default};
