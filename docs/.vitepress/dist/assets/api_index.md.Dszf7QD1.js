import{_ as s,c as i,o as e,ae as t}from"./chunks/framework.BuyCb9nx.js";const g=JSON.parse('{"title":"API Reference","description":"","frontmatter":{},"headers":[],"relativePath":"api/index.md","filePath":"api/index.md"}'),n={name:"api/index.md"};function r(l,a,o,h,p,c){return e(),i("div",null,a[0]||(a[0]=[t(`<h1 id="api-reference" tabindex="-1">API Reference <a class="header-anchor" href="#api-reference" aria-label="Permalink to &quot;API Reference&quot;">​</a></h1><p>This section contains detailed documentation for all functions in @mhkeller/utils, organized by category.</p><h2 id="categories" tabindex="-1">Categories <a class="header-anchor" href="#categories" aria-label="Permalink to &quot;Categories&quot;">​</a></h2><ul><li><strong><a href="./array-object.html">Array &amp; Object Utils</a></strong> - Functions for working with arrays, objects, and data structures</li><li><strong><a href="./string.html">String Utils</a></strong> - Functions for string manipulation and formatting</li><li><strong><a href="./number.html">Number Utils</a></strong> - Functions for number formatting and mathematical operations</li><li><strong><a href="./time-progress.html">Time &amp; Progress</a></strong> - Functions for time handling, delays, and progress tracking</li><li><strong><a href="./file-data.html">File &amp; Data</a></strong> - Functions for reading, writing, and processing data files</li><li><strong><a href="./utilities.html">General Utilities</a></strong> - Miscellaneous utility functions</li><li><strong><a href="./database.html">Database Functions</a></strong> - PostgreSQL utilities and helpers</li><li><strong><a href="./sqlite.html">SQLite Functions</a></strong> - SQLite database utilities</li><li><strong><a href="./scraping.html">Web Scraping</a></strong> - Browser automation and screenshot tools</li></ul><h2 id="quick-reference" tabindex="-1">Quick Reference <a class="header-anchor" href="#quick-reference" aria-label="Permalink to &quot;Quick Reference&quot;">​</a></h2><p>All functions are exported from the main module:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  commas, sleep, initLogProgress,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  readXlsx, writeSync, checkIsTrue</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@mhkeller/utils&#39;</span></span></code></pre></div><p>Database and scraping functions are in separate modules:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { uploadRows, setTableUpload } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@mhkeller/utils/db&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { launchBrowser, screenshotPage } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@mhkeller/utils/scrape&#39;</span></span></code></pre></div><p><em>Note: All functions within each category are listed alphabetically for easy reference.</em></p>`,10)]))}const k=s(n,[["render",r]]);export{g as __pageData,k as default};
