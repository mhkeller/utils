import{_ as i,c as s,o as t,ae as a}from"./chunks/framework.BuyCb9nx.js";const u=JSON.parse('{"title":"General Utilities","description":"","frontmatter":{},"headers":[],"relativePath":"api/utilities.md","filePath":"api/utilities.md"}'),n={name:"api/utilities.md"};function l(o,e,r,p,c,h){return t(),s("div",null,e[0]||(e[0]=[a(`<h1 id="general-utilities" tabindex="-1">General Utilities <a class="header-anchor" href="#general-utilities" aria-label="Permalink to &quot;General Utilities&quot;">​</a></h1><p>Miscellaneous utility functions.</p><h2 id="checkistrue" tabindex="-1">checkIsTrue <a class="header-anchor" href="#checkistrue" aria-label="Permalink to &quot;checkIsTrue&quot;">​</a></h2><p><strong>File:</strong> <code>lib/checkIsTrue.js</code></p><p>Checks if a condition is true. If not, it logs the value and exits the process.</p><p><strong>Parameters:</strong></p><ul><li><code>options</code> (object) - Options object</li><li><code>options.condition</code> (boolean) - The condition to check</li><li><code>options.msg</code> (string) - The message to display if the condition is false</li><li><code>options.value</code> (any) - The value to display if the condition is false</li><li><code>options.context</code> (any, optional) - The context to display if the condition is false</li></ul><p><strong>Example:</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { checkIsTrue } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@mhkeller/utils&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Usage example for checkIsTrue</span></span></code></pre></div><h2 id="gettodo" tabindex="-1">getTodo <a class="header-anchor" href="#gettodo" aria-label="Permalink to &quot;getTodo&quot;">​</a></h2><p><strong>File:</strong> <code>lib/getTodo.js</code></p><p>Filter an array of items to only those that don&#39;t exist in the filesystem</p><p><strong>Parameters:</strong></p><ul><li><code>files</code> (Array(any)) - Array of items to check</li><li><code>exists</code> (function(any): string, optional) - Function that returns a filepath to check for existence</li></ul><p><strong>Returns:</strong></p><ul><li>Array(any) - Array of files that don&#39;t exist</li></ul><p><strong>Example:</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { getTodo } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@mhkeller/utils&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Usage example for getTodo</span></span></code></pre></div><h2 id="paginatedfetcher" tabindex="-1">paginatedFetcher <a class="header-anchor" href="#paginatedfetcher" aria-label="Permalink to &quot;paginatedFetcher&quot;">​</a></h2><p><strong>File:</strong> <code>lib/paginatedFetcher.js</code></p><p>A function that fetches all pages from a paginated API. It uses recursion to handle pagination and accumulates results.</p><p><strong>Parameters:</strong></p><ul><li><code>options</code> (Object) - Options for the fetcher function.</li><li><code>options.isOk</code> (Function) - A function to check if the response is valid.</li><li><code>options.getItems</code> (Function) - A function to get the array items from the response.</li><li><code>options.getNext</code> (Function) - A function to get the next page URL from the response.</li><li><code>options.getTotal</code> (Function) - A function to get the total number of items from the response.</li><li><code>options.pageSize</code> (number) - The number of items per page.</li><li><code>options.sleepTime=1000</code> (number, optional) - The time to wait between requests in milliseconds.</li></ul><p><strong>Returns:</strong></p><ul><li>Function - A function that fetches all pages from the API.</li></ul><ul><li>@throws {Error} Throws an error if the fetch fails or if the response structure is unexpected.</li></ul><p><strong>Example:</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { paginatedFetcher } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@mhkeller/utils&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Usage example for paginatedFetcher</span></span></code></pre></div><h2 id="queuecalls" tabindex="-1">queueCalls <a class="header-anchor" href="#queuecalls" aria-label="Permalink to &quot;queueCalls&quot;">​</a></h2><p><strong>File:</strong> <code>lib/queueCalls.js</code></p><p>Queue calls to a function with a concurrency limit.</p><p><strong>Parameters:</strong></p><ul><li><code>items</code> (Array(any)) - The parameters to pass to the function.</li><li><code>fn</code> (Function) - The function to call with each item.</li><li><code>concurrency=Infinity</code> (number, optional) - The maximum number of concurrent calls.</li></ul><p><strong>Returns:</strong></p><ul><li>Promise(Array of any) - A promise that resolves to an array of results when all calls have completed.</li></ul><ul><li>@example</li><li>const items = [1, 2, 3, 4, 5];</li><li>const fn = async (item, index, total) =&gt; {</li><li>console.log(<code>Calling \${item} (\${index} of \${total})</code>);</li><li>await new Promise(resolve =&gt; setTimeout(resolve, 1000));</li><li>console.log(<code>Called \${item} (\${index} of \${total})</code>);</li><li>return item * 2;</li><li>};</li><li>const results = await queueCalls(items, fn, 2);</li><li>console.log(results);</li></ul><p><strong>Example:</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { queueCalls } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@mhkeller/utils&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Usage example for queueCalls</span></span></code></pre></div><h2 id="requirearg" tabindex="-1">requireArg <a class="header-anchor" href="#requirearg" aria-label="Permalink to &quot;requireArg&quot;">​</a></h2><p><strong>File:</strong> <code>lib/requireArg.js</code></p><p>Require a command line argument and exit if it is not provided</p><p><strong>Parameters:</strong></p><ul><li><code>msg</code> (string) - Error message to display if argument is missing</li><li><code>index</code> (number) - Index of the argument to require in process.argv</li></ul><p><strong>Returns:</strong></p><ul><li>string - The required argument value, trimmed</li></ul><p><strong>Example:</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { requireArg } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@mhkeller/utils&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Usage example for requireArg</span></span></code></pre></div>`,47)]))}const g=i(n,[["render",l]]);export{u as __pageData,g as default};
