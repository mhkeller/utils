import{_ as e,c as i,o as a,ae as t}from"./chunks/framework.BuyCb9nx.js";const g=JSON.parse('{"title":"Web Scraping Functions","description":"","frontmatter":{},"headers":[],"relativePath":"api/scraping.md","filePath":"api/scraping.md"}'),n={name:"api/scraping.md"};function o(p,s,r,l,c,h){return a(),i("div",null,s[0]||(s[0]=[t(`<h1 id="web-scraping-functions" tabindex="-1">Web Scraping Functions <a class="header-anchor" href="#web-scraping-functions" aria-label="Permalink to &quot;Web Scraping Functions&quot;">​</a></h1><p>Utilities for browser automation and web scraping.</p><h2 id="launchbrowser" tabindex="-1">launchBrowser <a class="header-anchor" href="#launchbrowser" aria-label="Permalink to &quot;launchBrowser&quot;">​</a></h2><p><strong>File:</strong> <code>scrape/launchBrowser.js</code></p><p>Launch a browser using Playwright</p><p><strong>Parameters:</strong></p><ul><li><code>options</code> (Object, optional) - Browser launch options</li><li><code>options.headless=true</code> (boolean, optional) - Whether to run browser in headless mode</li><li><code>options.viewport</code> (Object, optional) - Viewport dimensions</li><li><code>options.viewport.width=1080</code> (number, optional) - Viewport width in pixels</li><li><code>options.viewport.height=875</code> (number, optional) - Viewport height in pixels</li></ul><p><strong>Returns:</strong></p><ul><li>PromiseObject with browser: Browser, page: Page - &gt; - Browser and page instances</li></ul><p><strong>Example:</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { launchBrowser } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@mhkeller/utils&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Usage example for launchBrowser</span></span></code></pre></div><h2 id="screenshotpage" tabindex="-1">screenshotPage <a class="header-anchor" href="#screenshotpage" aria-label="Permalink to &quot;screenshotPage&quot;">​</a></h2><p><strong>File:</strong> <code>scrape/screenshotPage.js</code></p><p>Wait for a specified time on a page</p><p><strong>Parameters:</strong></p><ul><li><code>page</code> (Page) - Playwright page instance</li><li><code>ms</code> (number) - Time to wait in milliseconds</li><li><code>msg=&#39;&#39;</code> (string, optional) - Optional message to display while waiting</li></ul><p><strong>Returns:</strong></p><ul><li>Promise(void) - Promise that resolves when waiting is complete</li></ul><p><strong>Example:</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { screenshotPage } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@mhkeller/utils&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Usage example for screenshotPage</span></span></code></pre></div><h2 id="wait" tabindex="-1">wait <a class="header-anchor" href="#wait" aria-label="Permalink to &quot;wait&quot;">​</a></h2><p><strong>File:</strong> <code>scrape/wait.js</code></p><p>Create a function to wait for a specified amount of time on a page</p><p><strong>Parameters:</strong></p><ul><li><code>page</code> (Page) - The puppeteer or playwright page object</li></ul><p><strong>Returns:</strong></p><ul><li>Function - A function that waits for a specified amount of time</li></ul><p><strong>Example:</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { wait } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@mhkeller/utils&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Usage example for wait</span></span></code></pre></div>`,29)]))}const u=e(n,[["render",o]]);export{g as __pageData,u as default};
